<?php

/**
 * ProcessWire QuickTags
 *
 * By Nico Knoll (http://www.nico-knoll.de/)
 *
 *
 * Based on js_quicktags by Alex King (http://alexking.org/)
 *
 */

class InputfieldQuickTags extends InputfieldTextarea {
	
     public static function getModuleInfo() {
	  return array(
		  'title' => 'QuickTags',
		  'version' => 100,
		  'summary' => 'Adds a toolbar to a textarea with insertable HTML tags.',
		  'permanent' => true
		  );
     }

	public function ___render() {
		$this->config->scripts->add($this->config->urls->InputfieldQuickTags.'QuickTags.js');
		$this->config->styles->add($this->config->urls->InputfieldQuickTags.'QuickTags.css');

		$toolbar = '<script type="text/javascript" charset="utf-8">		
						edToolbar("'.parent::getAttribute('id').'");		
					</script>'; 
		return $toolbar.parent::___render();
	}

	public function getAttributes() {
		$attrs = parent::getAttributes();
		if(empty($attrs['size'])) {
			unset($attrs['size']); 
			$attrs['class'] = (empty($attrs['class']) ? '' : $attrs['class'] . ' ') . 'InputfieldMaxWidth';
		}
		return $attrs; 
	}

	public function setAttribute($key, $value) {

		if($key == 'maxlength' && !(int) $value) $value = ''; // blank string prevents a maxlength='0' attribute

		if($key == 'value') { 
			$value = trim($value); 
			$maxlength = (int) $this->attr('maxlength'); 
			if($maxlength > 0) $value = substr($value, 0, $maxlength); 
		}

		return parent::setAttribute($key, $value); 
	}}